<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Sakai Foundation under one or more contributor
  license agreements. See the NOTICE file distributed with this
  work for additional information regarding copyright ownership.
  The Sakai Foundation licenses this file to you under the Apache
  License, Version 2.0 (the "License"); you may not use this file
  except in compliance with the License. You may obtain a copy of
  the License at:

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on
  an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied. See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
						http://www.springframework.org/schema/util
    					http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<!--
		Advise definitions for method timing purposes   
	 -->
	<bean id="methodTimingInterceptor"
		class="net.unicon.sakora.impl.util.MethodTimingInterceptor">
		<property name="logMethodTime" value="true" />
	</bean>

	<bean id="sakoraConsumerTimingPointCut"
		class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref bean="methodTimingInterceptor" />
		</property>
		<property name="patterns">
			<list>
				<value>.*onMessage.*</value>
			</list>
		</property>
	</bean>

	<bean id="net.unicon.sakora.api.SakoraService"
		class="net.unicon.sakora.impl.SakoraServiceImpl" lazy-init="false" />
<!-- 
	<bean id="net.unicon.sakora.api.queue.InboundRequestDestination"
		parent="org.sakaiproject.messageservice.AbstractQueueDestination">
		<property name="physicalName" value="sakora.in.rqst.queue" />
	</bean>
 -->
 
	<!--  Use the following definition for response containing a standard URL -->
 	<bean id="net.unicon.sakora.api.handler.url.URLHandlingTemplate"
		class="net.unicon.sakora.impl.handler.url.URLHandlingTemplateImpl"/>

	<!--  Use the following definition if a response comes back for a FTP server in passive mode -->
<!--  
	<bean id="net.unicon.sakora.api.handler.url.URLHandlingTemplate"
		class="net.unicon.sakora.impl.handler.url.FtpHandlingTemplateImpl"> 
		<property name="enablePassiveMode" value="true"/>
	</bean>
-->

	<bean id="net.unicon.sakora.api.handler.xml.XMLStreamHandlingCallback.target"
		class="net.unicon.sakora.impl.handler.xml.XMLStreamHandlingCallbackImpl">
		<property name="messageProducer"
			ref="net.unicon.sakora.api.queue.MessageProducer" />
		<property name="childDepth" value="2" />
        <property name="inputEncoding" value="UTF-8"/>
	</bean>

	<bean id="jmsTransactionManager"
		class="org.springframework.jms.connection.JmsTransactionManager">
		<property name="connectionFactory"
			ref="org.sakaiproject.messageservice.JmsConnectionFactory" />
	</bean>

	<bean id="net.unicon.sakora.api.handler.xml.XMLStreamHandlingCallback"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="proxyInterfaces">
			<list>
				<value>
					net.unicon.sakora.api.handler.xml.XMLStreamHandlingCallback
				</value>
			</list>
		</property>
		<property name="transactionManager">
			<ref local="jmsTransactionManager" />
		</property>
		<property name="target">
			<ref local="net.unicon.sakora.api.handler.xml.XMLStreamHandlingCallback.target" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="handleStream*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="net.unicon.sakora.api.queue.MessageProducer"
		class="net.unicon.sakora.impl.queue.MessageProducerImpl">
		<property name="connectionFactory"
			ref="org.sakaiproject.messageservice.JmsConnectionFactory" />
		<property name="queueName"
			ref="net.unicon.sakora.api.queue.InboundRequestDestinationName" />
	</bean>

	<bean id="net.unicon.sakora.impl.queue.MessageListenerImpl"
		class="net.unicon.sakora.impl.queue.MessageListenerImpl">
		<property name="imsContentDelegator"
			ref="net.unicon.sakora.api.ims.ImsContentDelegator" />
	</bean>

	<!-- Pouint cut advisor definition for perfomance testing
		
		<bean id="net.unicon.sakora.impl.queue.MessageListenerImpl_TARGET"
		class="net.unicon.sakora.impl.queue.MessageListenerImpl">
		<property name="imsContentDelegator" ref="net.unicon.sakora.api.ims.ImsContentDelegator"/>
		</bean>
		
		<bean id="net.unicon.sakora.impl.queue.MessageListenerImpl"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target"><ref local="net.unicon.sakora.impl.queue.MessageListenerImpl_TARGET"/></property>
		<property name="interceptorNames">
		<list>
		<value>sakoraConsumerTimingPointCut</value>
		</list>
		</property>
		</bean>
	-->
	
	<!-- 
				Jaxb2 Marshaller  definition for CourseManagement XSDs  
	-->
	<bean id="net.unicon.sakora.ims.CMSMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath" 
			value="com.oracle.xmlns.enterprise.hcm.services.cms"/>
	</bean>

	<!-- 
				Jaxb2 Marshaller  definition for GroupManagement XSDs  
	-->
	<bean id="net.unicon.sakora.ims.GMSMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath" 
			value="com.oracle.xmlns.enterprise.hcm.services.gms"/>
	</bean>

	<!-- 
				Jaxb2 Marshaller  definition for PersonManagement XSDs  
	-->
	<bean id="net.unicon.sakora.ims.PMSMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath" 
			value="com.oracle.xmlns.enterprise.hcm.services.pms"/>
	</bean>

	<!-- 
				Jaxb2 Marshaller  definition for MembershipManagement XSDs  
	-->
	<bean id="net.unicon.sakora.ims.MMSMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath" 
			value="com.oracle.xmlns.enterprise.hcm.services.mms"/>
	</bean>

	<!-- 
				Jaxb2 Marshaller  definition for OutcomeManagement XSDs  
	-->
<!-- 
	<bean id="net.unicon.sakora.ims.OMSMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath" 
			value="com.oracle.xmlns.enterprise.hcm.services.oms"/>
	</bean>
-->

	<!--
				 
	 -->
	<bean id="net.unicon.sakora.api.ims.ImsContentDelegator"
		class="net.unicon.sakora.impl.ims.ImsContentDelegatorImpl">
		<property name="elementToCreatorMap">
			<map>
				<entry key="group">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreateGroup" />
				</entry>
				<entry key="coursetemplate">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreateCourseTemplate" />
				</entry>
				<entry key="courseoffering">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreateCourseOffering" />
				</entry>
				<entry key="coursesection">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreateCourseSection" />
				</entry>
				<entry key="sectionassociation">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreateSectionAssociation" />
				</entry>
				<entry key="person">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreatePerson" />
				</entry>
				<entry key="membership">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreateMembership" />
				</entry>
			</map>
		</property>
	</bean>

	<bean id="listenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="concurrentConsumers" value="1" />
		<property name="connectionFactory"
			ref="org.sakaiproject.messageservice.JmsConnectionFactory" />
		<property name="destinationName" ref="net.unicon.sakora.api.queue.InboundRequestDestinationName"/>
<!-- 
		<property name="destination"
			ref="net.unicon.sakora.api.queue.InboundRequestDestination" />
 -->
		<property name="messageListener"
			ref="net.unicon.sakora.impl.queue.MessageListenerImpl" />
		<property name="maxConcurrentConsumers" value="1" />
	</bean>

<!-- ===================================================================
		Declaration of the File Sync Service 
     =================================================================== -->
  <bean id="net.unicon.sakora.file.ImsEsSyncService" 
      class="net.unicon.sakora.impl.ImsEsSyncServiceFileImpl"
      lazy-init="false" init-method="init">
      <property name="urlHandlingTemplate">
         <ref bean="net.unicon.sakora.api.handler.url.URLHandlingTemplate"/>
      </property>
      <property name="xmlStreamHandlingCallback">
         <ref bean="net.unicon.sakora.api.handler.xml.XMLStreamHandlingCallback"/>
      </property>
      <property name="serverConfigurationService"
		ref="org.sakaiproject.component.api.ServerConfigurationService" />
	  <property name="cleanupData" value="true"/>
  </bean>


<!-- ===================================================================
		Declaration of the Web Service Sync Service 
     =================================================================== -->
	<bean id="net.unicon.sakora.api.ws.ImsEsSyncService"
		class="net.unicon.sakora.impl.ws.client.ImsEsSyncServiceWsClientImpl"
		lazy-init="false" init-method="init">
		<property name="webServiceTemplate">
			<bean class="org.springframework.ws.client.core.WebServiceTemplate">
				<property name="messageFactory">
					<bean class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory"/>	
<!-- 					<bean class="org.springframework.ws.soap.axiom.AxiomSoapMessageFactory"/>   -->
				</property>
			</bean>
		</property>
		<property name="urlHandlingTemplate">
			<ref bean="net.unicon.sakora.api.handler.url.URLHandlingTemplate" />
		</property>
		<property name="xmlStreamHandlingCallback">
			<ref bean="net.unicon.sakora.api.handler.xml.XMLStreamHandlingCallback" />
		</property>
	  	<property name="requestDocumentMap">
			<map>
				<entry key="readCourseTemplates"
					value="net/unicon/sakora/impl/xml/readCourseTemplatesRequest.xml" />
				<entry key="readCourseTemplatesFromSavePoint"
					value="net/unicon/sakora/impl/xml/readCourseTemplatesFromSavePointRequest.xml" />
				<entry key="readCourseOfferings"
					value="net/unicon/sakora/impl/xml/readCourseOfferingsRequest.xml" />
				<entry key="readCourseOfferingsFromSavePoint"
					value="net/unicon/sakora/impl/xml/readCourseOfferingsFromSavePointRequest.xml" />
				<entry key="readCourseSections"
					value="net/unicon/sakora/impl/xml/readCourseSectionsRequest.xml" />
				<entry key="readCourseSectionsFromSavePoint"
					value="net/unicon/sakora/impl/xml/readCourseSectionsFromSavePointRequest.xml" />
				<entry key="readSectionAssociations"
					value="net/unicon/sakora/impl/xml/readSectionAssociationsRequest.xml" />
				<entry key="readSectionAssociationsFromSavePoint"
					value="net/unicon/sakora/impl/xml/readSectionAssociationsFromSavePointRequest.xml" />
				<entry key="readPersons"
					value="net/unicon/sakora/impl/xml/readPersonsRequest.xml" />
				<entry key="readPersonsFromSavePoint"
					value="net/unicon/sakora/impl/xml/readPersonsFromSavePointRequest.xml" />
				<entry key="readGroups"
					value="net/unicon/sakora/impl/xml/readGroupsRequest.xml" />
				<entry key="readGroupsFromSavePoint"
					value="net/unicon/sakora/impl/xml/readGroupsFromSavePointRequest.xml" />
				<entry key="readMemberships"
					value="net/unicon/sakora/impl/xml/readMembershipsRequest.xml" />
				<entry key="readMembershipsFromSavePoint"
					value="net/unicon/sakora/impl/xml/readMembershipsFromSavePointRequest.xml" />
			</map>
		</property>
		<property name="documentInfoMap">
			<map>
				<entry key="dataFile_xpath"><value>//*[local-name()="dataFile"]</value></entry>
				<entry key="savepoint_xpath"><value>//*[local-name()="savePoint"]</value></entry>
				<entry key="from_savepoint"><value>//*[local-name()="fromSavePoint"]</value></entry>
				<entry key="namespace" value="" />
				<entry key="prefix" value="" />
			</map>
		</property>
		<property name="soapActionMap">
          <map>
            <entry key="readCourseTemplates" value="readCourseTemplates"/>
            <entry key="readCourseTemplatesFromSavePoint" value="readCourseTemplatesFromSavePoint"/>
            <entry key="readCourseOfferings" value="readCourseOfferings"/>
            <entry key="readCourseOfferingsFromSavePoint" value="readCourseOfferingsFromSavePoint"/>
            <entry key="readCourseSections" value="readCourseSections"/>
            <entry key="readCourseSectionsFromSavePoint" value="readCourseSectionsFromSavePoint"/>
            <entry key="readSectionAssociations" value="readSectionAssociations"/>
            <entry key="readSectionAssociationsFromSavePoint" value="readSectionAssociationsFromSavePoint"/>
            <entry key="readPersons" value="readPersons"/>
            <entry key="readPersonsFromSavePoint" value="readPersonsFromSavePoint"/>
            <entry key="readGroups" value="readGroups"/>
            <entry key="readGroupsFromSavePoint" value="readGroupsFromSavePoint"/>
            <entry key="readMemberships" value="readMemberships"/>
            <entry key="readMembershipsFromSavePoint" value="readMembershipsFromSavePoint"/>
          </map>
      </property>
	</bean>

	<!-- Oracle data loader job bean using the web service implementation -->
	<bean id="net.unicon.sakora.impl.jobs.DataLoaderJobBean.base"
	    abstract="true"
		class="net.unicon.sakora.impl.jobs.DataLoaderJobBean"
		init-method="init" destroy-method="destroy">
		<!-- scope="singleton"> -->
		<property name="sakoraService">
			<ref bean="net.unicon.sakora.api.SakoraService" />
		</property>
		<property name="imsEsSyncService">
			<ref bean="net.unicon.sakora.api.ws.ImsEsSyncService" />
		</property>
		<!-- this list just sets the processing order -->
		<property name="taskList" ref="net.unicon.sakora.impl.jobs.DataLoaderJobBean.stdTaskNames" />
	</bean>
	
	<bean id="net.unicon.sakora.impl.jobs.DataLoaderJobBean.stdTaskNames"
		class="java.util.ArrayList"
		scope="prototype">
		<constructor-arg>
			<list>
				<value>Group</value>
				<value>CourseTemplate</value>
				<value>CourseOffering</value>
				<value>CourseSection</value>
				<value>SectionAssociation</value>
				<value>Person</value>
				<value>Membership</value>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="net.unicon.sakora.impl.jobs.DataLoaderJobBean.incremental"
		parent="net.unicon.sakora.impl.jobs.DataLoaderJobBean.base">
		<property name="feedType" value="INCREMENTAL" />
	</bean>
	
	<bean id="net.unicon.sakora.impl.jobs.DataLoaderJobBean.snapshot"
		parent="net.unicon.sakora.impl.jobs.DataLoaderJobBean.base">
		<property name="feedType" value="SNAPSHOT" />
	</bean>

	<!-- Oracle data loader job bean using the file implementation -->
	<bean id="net.unicon.sakora.impl.jobs.DataLoaderJobBean.file"
		parent="net.unicon.sakora.impl.jobs.DataLoaderJobBean.base" >
		<property name="feedType" value="SNAPSHOT" />
		<property name="imsEsSyncService">
			<ref bean="net.unicon.sakora.file.ImsEsSyncService" />
		</property>
	</bean>
	
	<bean
		id="net.unicon.sakora.impl.jobs.DataLoaderJobBean.wrapper.base"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringStatefulJobBeanWrapper"
		abstract="true" init-method="init">
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>

	<!-- this is the helper that will register the above bean with the schedule manager
		things to set here are the beanId (from bean above) and the jobName
	-->
	<bean
		id="net.unicon.sakora.impl.jobs.DataLoaderJobBean.wrapper.incremental"
		parent="net.unicon.sakora.impl.jobs.DataLoaderJobBean.wrapper.base">
		<property name="beanId">
			<value>net.unicon.sakora.impl.jobs.DataLoaderJobBean.incremental</value>
		</property>
		<property name="jobName">
			<value>Incremental Sakora Data Loader</value>
		</property>
	</bean>
	
	<!-- this is the helper that will register the above bean with the schedule manager
		things to set here are the beanId (from bean above) and the jobName
	-->
	<bean
		id="net.unicon.sakora.impl.jobs.DataLoaderJobBean.wrapper.snapshot"
		parent="net.unicon.sakora.impl.jobs.DataLoaderJobBean.wrapper.base">
		<property name="beanId">
			<value>net.unicon.sakora.impl.jobs.DataLoaderJobBean.snapshot</value>
		</property>
		<property name="jobName">
			<value>Snapshot Sakora Data Loader</value>
		</property>
	</bean>

	<!-- this is the helper that will register the above bean with the schedule manager
		things to set here are the beanId (from bean above) and the jobName
	-->
	<bean
		id="net.unicon.sakora.impl.jobs.DataLoaderJobBean.wrapper.file"
		parent="net.unicon.sakora.impl.jobs.DataLoaderJobBean.wrapper.base">
		<property name="beanId">
			<value>net.unicon.sakora.impl.jobs.DataLoaderJobBean.file</value>
		</property>
		<property name="jobName">
			<value>File Sakora Data Loader</value>
		</property>
	</bean>

	<bean id="net.unicon.sakora.impl.jobs.ResultMapCopyingJobListener"
		class="net.unicon.sakora.impl.jobs.ResultMapCopyingJobListener"
		init-method="init"
		destroy-method="destroy">
		<property name="name" value="Snapshot Result Copier" />
		<property name="schedulerManager" ref="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		<property name="listenForJobBeanName" value="net.unicon.sakora.impl.jobs.DataLoaderJobBean.snapshot" />
		<property name="targetJobBeanName" value="net.unicon.sakora.impl.jobs.DataLoaderJobBean.incremental" />
		<property name="keysToCopy" ref="net.unicon.sakora.impl.jobs.DataLoaderJobBean.stdTaskNames" />
	</bean>

	<!-- IMS to Course Management handlers -->
	<bean id="net.unicon.sakora.impl.ims.ImsEntityCreatorFactory"
		class="net.unicon.sakora.impl.ims.ImsEntityCreatorFactory"
		lazy-init="false">
		<property name="imsCreatorBeans">
			<map>
				<entry key="Group">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreateGroup" />
				</entry>
				<entry key="CourseTemplate">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreateCourseTemplate" />
				</entry>
				<entry key="CourseOffering">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreateCourseOffering" />
				</entry>
				<entry key="CourseSection">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreateCourseSection" />
				</entry>
				<entry key="SectionAssociation">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreateSectionAssociation" />
				</entry>
				<entry key="Person">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreatePerson" />
				</entry>
				<entry key="Membership">
					<ref
						bean="net.unicon.sakora.impl.ims.ImsCreateMembership" />
				</entry>
			</map>
		</property>
	</bean>
	
    <bean id="net.unicon.sakora.api.ims.extern.ImsExternalHandler"
       class="net.unicon.sakora.impl.ims.extern.ImsExternalHandlerImpl"
       scope="singleton" init-method="init">
    </bean>
    
	<bean id="net.unicon.sakora.impl.ims.ImsCreateBase" abstract="true"
		class="net.unicon.sakora.impl.ims.ImsCreateBase">
		<property name="cmAdmin">
			<ref bean="org.sakaiproject.coursemanagement.api.CourseManagementAdministration" />
		</property>
		<property name="cmService">
			<ref bean="org.sakaiproject.coursemanagement.api.CourseManagementService" />
		</property>
		<property name="userDirService">
			<ref bean="org.sakaiproject.user.api.UserDirectoryService" />
		</property>
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="usageSessionService">
			<ref bean="org.sakaiproject.event.api.UsageSessionService" />
		</property>
		<property name="authzGroupService">
			<ref bean="org.sakaiproject.authz.api.AuthzGroupService" />
		</property>
		<property name="eventTrackingService">
			<ref bean="org.sakaiproject.event.api.EventTrackingService" />
		</property>
        <property name="imsExternalHandler">
            <ref bean="net.unicon.sakora.api.ims.extern.ImsExternalHandler" />
        </property>
	</bean>
	<bean id="net.unicon.sakora.impl.ims.ImsCreateGroup"
		class="net.unicon.sakora.impl.ims.ImsCreateGroup"
		parent="net.unicon.sakora.impl.ims.ImsCreateBase"
		init-method="init">
	</bean>
	<bean id="net.unicon.sakora.impl.ims.ImsCreateCourseTemplate"
		class="net.unicon.sakora.impl.ims.ImsCreateCourseTemplate"
		parent="net.unicon.sakora.impl.ims.ImsCreateBase"
		init-method="init">
	</bean>
	<bean id="net.unicon.sakora.impl.ims.ImsCreateCourseOffering"
		class="net.unicon.sakora.impl.ims.ImsCreateCourseOffering"
		parent="net.unicon.sakora.impl.ims.ImsCreateBase"
		init-method="init">
	</bean>
	<bean id="net.unicon.sakora.impl.ims.ImsCreateCourseSection"
		class="net.unicon.sakora.impl.ims.ImsCreateCourseSection"
		parent="net.unicon.sakora.impl.ims.ImsCreateBase"
		init-method="init">
	</bean>
	<bean id="net.unicon.sakora.impl.ims.ImsCreateSectionAssociation"
		class="net.unicon.sakora.impl.ims.ImsCreateSectionAssociation"
		parent="net.unicon.sakora.impl.ims.ImsCreateBase"
		init-method="init">
	</bean>
	<bean id="net.unicon.sakora.impl.ims.ImsCreatePerson"
		class="net.unicon.sakora.impl.ims.ImsCreatePerson"
		parent="net.unicon.sakora.impl.ims.ImsCreateBase"
		init-method="init">
	</bean>
    <bean id="net.unicon.sakora.impl.ims.ImsCreateMembership"
        class="net.unicon.sakora.impl.ims.ImsCreateMembership"
        parent="net.unicon.sakora.impl.ims.ImsCreateBase"
        init-method="init">
        <!-- mappings as used by CM provider -->
        <property name="roleMap">
            <map>
                <entry key="instructor" value="I" />
                <entry key="learner" value="S" />
                <entry key="teachingassistant" value="GSI" />
            </map>
        </property>
        <!-- mappings as used by CM provider -->
        <property name="statusMap">
            <map>
                <entry key="active" value="enrolled" />
                <entry key="inactive" value="wait" />
            </map>
        </property>
        <!-- mappings used to set user type -->
        <property name="roleUserTypeMap">
            <map>
                <entry key="instructor" value="registered" />
            </map>
        </property>
        
        <property name="defaultCredits" value="3" />
        <property name="gradingScheme" value="Letter Grade" />
    </bean>
<!-- 
  <bean id="net.unicon.sakora.api.queue.activemq.BrokerUrlString"
    class="java.lang.String" lazy-init="true">
    <constructor-arg value="tcp://localhost:61616" type="java.lang.String" />
  </bean>
 -->
	<bean id="net.unicon.sakora.api.queue.InboundRequestDestinationName"
		class="java.lang.String" lazy-init="true">
	    <constructor-arg value="sakora.in.rqst.queue" type="java.lang.String" />
	</bean>

<!-- ===================================================================
		Declaration of the Csv Sync Service 
     =================================================================== -->
	<bean id="net.unicon.sakora.api.csv.CsvSyncService" 
		class="net.unicon.sakora.impl.csv.CsvSyncServiceImpl"
		lazy-init="false"
		init-method="init"
		destroy-method="destroy">
		<property name="cleanupData" value="true"/>
		<property name="accademicSessionHandler" ref="net.unicon.sakora.impl.csv.CsvAcademicSessionHandler"/>
		<property name="canonicalCourseHandler" ref="net.unicon.sakora.impl.csv.CsvCanonicalCourseHandler"/>
		<property name="courseOfferingHandler" ref="net.unicon.sakora.impl.csv.CsvCourseOfferingHandler"/>
		<property name="courseSetHandler" ref="net.unicon.sakora.impl.csv.CsvCourseSetHandler"/>
		<property name="enrollmentSetHandler" ref="net.unicon.sakora.impl.csv.CsvEnrollmentSetHandler"/>
		<property name="courseMembershipHandler" ref="net.unicon.sakora.impl.csv.CsvCourseMembershipHandler"/>
		<property name="sectionMembershipHandler" ref="net.unicon.sakora.impl.csv.CsvSectionMembershipHandler"/>
		<property name="personHandler" ref="net.unicon.sakora.impl.csv.CsvPersonHandler"/>
		<property name="sectionHandler" ref="net.unicon.sakora.impl.csv.CsvSectionHandler"/>
		<property name="sectionMeetingHandler" ref="net.unicon.sakora.impl.csv.CsvSectionMeetingHandler"/>
		<property name="configurationService" ref="org.sakaiproject.component.api.ServerConfigurationService"/>
		<property name="dbLog" ref="net.unicon.sakora.impl.csv.dao.CsvSyncDao" />
	</bean>

    <!-- Dao and transaction proxy for tracking delta between data loads -->
    <bean id="net.unicon.sakora.impl.csv.dao.CsvSyncTarget"
                    class="net.unicon.sakora.impl.csv.dao.CsvSyncDaoImpl">
            <property name="sessionFactory"
                    ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
            <property name="persistentClasses">
                    <list>
                            <value>net.unicon.sakora.api.csv.model.Membership</value>
                            <value>net.unicon.sakora.api.csv.model.Person</value>
                            <value>net.unicon.sakora.api.csv.model.SakoraLog</value>
                            <value>net.unicon.sakora.api.csv.model.Session</value>
                    </list>
            </property>
    </bean>

    <bean id="net.unicon.sakora.impl.csv.dao.CsvSyncDao"
                    class="org.sakaiproject.genericdao.api.spring.CurrentClassLoaderTxProxyFactoryBean">
            <property name="transactionManager"
                    ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
            <property name="target"
                    ref="net.unicon.sakora.impl.csv.dao.CsvSyncTarget" />
            <property name="transactionAttributes">
                    <props>
                            <prop key="*">PROPAGATION_REQUIRED</prop>
                    </props>
            </property>
    </bean>

	<bean id="org.sakaiproject.poll.hibernate.AdditionalHibernateMappings"
		class="org.sakaiproject.springframework.orm.hibernate.impl.AdditionalHibernateMappingsImpl">
		<property name="mappingResources">
			<list>
                <value>net/unicon/sakora/api/csv/model/Membership.hbm.xml</value>
                <value>net/unicon/sakora/api/csv/model/Person.hbm.xml</value>
                <value>net/unicon/sakora/api/csv/model/SakoraLog.hbm.xml</value>
                <value>net/unicon/sakora/api/csv/model/Session.hbm.xml</value>
            </list>
		</property>
	</bean>
	
	<bean id="net.unicon.sakora.impl.csv.dao.CsvIndexGenerator"
		class="net.unicon.sakora.impl.csv.dao.CsvIndexGenerator"
		init-method="init" destroy-method="destroy">
		<property name="sqlService" ref="org.sakaiproject.db.api.SqlService"/>
		<property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService" />
	</bean>

	<bean id="net.unicon.sakora.impl.csv.CsvHandlerBase" 
		abstract="true"
		init-method="init"
		destroy-method="destroy">
		<property name="cmAdmin">
			<ref bean="org.sakaiproject.coursemanagement.api.CourseManagementAdministration" />
		</property>
		<property name="cmService">
			<ref bean="org.sakaiproject.coursemanagement.api.CourseManagementService" />
		</property>
		<property name="userDirService">
			<ref bean="org.sakaiproject.user.api.UserDirectoryService" />
		</property>
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="usageSessionService">
			<ref bean="org.sakaiproject.event.api.UsageSessionService" />
		</property>
		<property name="contentHostingService">
			<ref bean="org.sakaiproject.content.api.ContentHostingService" />
		</property>
		<property name="authzGroupService">
			<ref bean="org.sakaiproject.authz.api.AuthzGroupService" />
		</property>
		<property name="eventTrackingService">
			<ref bean="org.sakaiproject.event.api.EventTrackingService" />
		</property>
		<property name="configurationService">
			<ref bean="org.sakaiproject.component.api.ServerConfigurationService"/>
		</property>
		<property name="searchPageSize" value="1000" />
		<property name="dao" ref="net.unicon.sakora.impl.csv.dao.CsvSyncDao" />
		<property name="hasHeader" value="true" />
	</bean>

	<bean id="net.unicon.sakora.impl.csv.CsvAcademicSessionHandler"
		class="net.unicon.sakora.impl.csv.CsvAcademicSessionHandler"
		parent="net.unicon.sakora.impl.csv.CsvHandlerBase"
		init-method="init">
		<property name="csvFileName" value="sessions.csv" />
	</bean>

	<bean id="net.unicon.sakora.impl.csv.CsvCanonicalCourseHandler"
		class="net.unicon.sakora.impl.csv.CsvCanonicalCourseHandler"
		parent="net.unicon.sakora.impl.csv.CsvHandlerBase"
		init-method="init">
		<property name="csvFileName" value="courses.csv" />
	</bean>

	<bean id="net.unicon.sakora.impl.csv.CsvCourseSetHandler"
		class="net.unicon.sakora.impl.csv.CsvCourseSetHandler"
		parent="net.unicon.sakora.impl.csv.CsvHandlerBase"
		init-method="init">
		<property name="csvFileName" value="courseSets.csv" />
	</bean>

	<bean id="net.unicon.sakora.impl.csv.CsvCourseOfferingHandler"
		class="net.unicon.sakora.impl.csv.CsvCourseOfferingHandler"
		parent="net.unicon.sakora.impl.csv.CsvHandlerBase"
		init-method="init">
		<property name="csvFileName" value="courseOfferings.csv" />
	</bean>

	<bean id="net.unicon.sakora.impl.csv.CsvEnrollmentSetHandler"
		class="net.unicon.sakora.impl.csv.CsvEnrollmentSetHandler"
		parent="net.unicon.sakora.impl.csv.CsvHandlerBase"
		init-method="init">
		<property name="csvFileName" value="enrollmentSets.csv" />
	</bean>
<!-- 
	<bean id="net.unicon.sakora.impl.csv.CsvInstructorHandler"
		class="net.unicon.sakora.impl.csv.CsvInstructorHandler"
		parent="net.unicon.sakora.impl.csv.CsvHandlerBase"
		init-method="init">
	</bean>
-->
	<bean id="net.unicon.sakora.impl.csv.CsvSectionHandler"
		class="net.unicon.sakora.impl.csv.CsvSectionHandler"
		parent="net.unicon.sakora.impl.csv.CsvHandlerBase"
		init-method="init">
		<property name="csvFileName" value="courseSections.csv" />
		<property name="sectionCategoryMap" ref="net.unicon.sakora.impl.csv.CsvSectionHandler.sectionCategoryMap" />
	</bean>
	
	<util:map id="net.unicon.sakora.impl.csv.CsvSectionHandler.sectionCategoryMap">
		<entry key="NONE" value="Uncategorized" />
	</util:map>

	<bean id="net.unicon.sakora.impl.csv.CsvSectionMeetingHandler"
		class="net.unicon.sakora.impl.csv.CsvSectionMeetingHandler"
		parent="net.unicon.sakora.impl.csv.CsvHandlerBase"
		init-method="init">
		<property name="csvFileName" value="sectionMeetings.csv" />
	</bean>

	<bean id="net.unicon.sakora.impl.csv.CsvPersonHandler"
		class="net.unicon.sakora.impl.csv.CsvPersonHandler"
		parent="net.unicon.sakora.impl.csv.CsvHandlerBase"
		init-method="init">
		<property name="idManager" ref="org.sakaiproject.id.api.IdManager" />
		<property name="deleteUsers" value="false" />
		<!-- An alternative to deleting users no longer in the CSV data is to change their user type.
		Such as to 'alumni' and then optionally define that user type with different permissions -->
		<property name="suspended" value="suspended" />
		<property name="csvFileName" value="people.csv" />
	</bean>

	<bean id="net.unicon.sakora.impl.csv.CsvSectionMembershipHandler"
		class="net.unicon.sakora.impl.csv.CsvMembershipHandler"
		parent="net.unicon.sakora.impl.csv.CsvHandlerBase"
		init-method="init">
		<property name="defaultCredits" value="0" />
		<property name="defaultGradingScheme" value="LetterGrade" />
		<!-- custom section roles? -->
		<property name="taRole" value="GSI" />
		<property name="studentRole" value="S" />
		<property name="instructorRole" value="I" />
		<property name="mode" value="section" />
		<property name="csvFileName" value="sectionMembership.csv" />
	</bean>
	
	<bean id="net.unicon.sakora.impl.csv.CsvCourseMembershipHandler"
		class="net.unicon.sakora.impl.csv.CsvMembershipHandler"
		parent="net.unicon.sakora.impl.csv.CsvHandlerBase"
		init-method="init">
		<property name="defaultCredits" value="0" />
		<property name="defaultGradingScheme" value="LetterGrade" />
		<!-- custom course roles? -->
		<property name="taRole" value="GSI" />
		<property name="studentRole" value="S" />
		<property name="instructorRole" value="I" />
		<property name="mode" value="course" />
		<property name="csvFileName" value="courseMembership.csv" />
	</bean>

	<bean id="net.unicon.sakora.impl.jobs.DataLoaderJobBean.csv"
		class="net.unicon.sakora.impl.jobs.CsvLoaderJobBean">
		<!-- scope="singleton"> -->
		<property name="csvSyncService">
			<ref bean="net.unicon.sakora.api.csv.CsvSyncService" />
		</property>
	</bean>
	
	<!-- this is the helper that will register the above bean with the schedule manager
		things to set here are the beanId (from bean above) and the jobName
	-->
	<bean
		id="net.unicon.sakora.impl.jobs.DataLoaderJobBean.wrapper.csv"
		parent="net.unicon.sakora.impl.jobs.DataLoaderJobBean.wrapper.base">
		<property name="beanId">
			<value>net.unicon.sakora.impl.jobs.DataLoaderJobBean.csv</value>
		</property>
		<property name="jobName" ref="net.unicon.sakora.impl.jobs.DataLoaderJobBean.csv.jobName">
		</property>
	</bean>
	
	<bean id="net.unicon.sakora.impl.jobs.DataLoaderJobBean.csv.jobName"
		class="java.lang.String" lazy-init="true">
	    <constructor-arg value="SIS CSV Data Loader" type="java.lang.String" />
	</bean>
</beans>
